============================================================================
SELECT
============================================================================
//
SELECT * 
FROM employees;

//
SELECT 
    CONCAT_WS(', ', lastName, firstname)
FROM
    employees;
============================================================================
ORDER BY
============================================================================
// ORDER BY clause to sort values in one column 
SELECT
    contactLastname,
    contactFirstname
FROM
    customers
ORDER BY
    contactLastname;

//ORDER BY clause to sort values in multiple columns 
SELECT
    contactLastname,
    contactFirstname
FROM
    customers
ORDER BY
    contactLastname DESC,
    contactFirstname ASC;

//ORDER BY to sort a result set by an expression
SELECT 
    orderNumber, 
    orderlinenumber, 
    quantityOrdered * priceEach
FROM
    orderdetails
ORDER BY 
   quantityOrdered * priceEach DESC;

//ORDER BY to sort data using a custom list
SELECT 
    orderNumber, 
    status
FROM
    orders
ORDER BY 
    FIELD(status,
    	'On Hold',
        'In Process',
        'Cancelled',
        'Resolved',
        'Disputed',
        'Shipped');
============================================================================
WHERE
============================================================================
//
? ama sortin officeCode thi k jobTitle thi?
SELECT 
    lastName, 
    firstName, 
    jobTitle, 
    officeCode
FROM
    employees
WHERE
    jobtitle = 'Sales Rep' OR 
    officeCode = 1
ORDER BY 
    officeCode , 
    jobTitle;

//
SELECT 
    firstName, 
    lastName
FROM
    employees
WHERE
    lastName LIKE '%son'
ORDER BY firstName;

//
SELECT 
    firstName, 
    lastName, 
    officeCode
FROM
    employees
WHERE
    officeCode IN (1 , 2, 3)
ORDER BY 
    officeCode;

//
SELECT 
    lastName, 
    firstName, 
    reportsTo
FROM
    employees
WHERE
    reportsTo IS NULL;

//
SELECT 
    lastname, 
    firstname, 
    jobtitle
FROM
    employees
WHERE
    jobtitle <> 'Sales Rep';

//
============================================================================
SELECT DISTINCT
============================================================================
//
SELECT 
    DISTINCT lastname
FROM
    employees
ORDER BY 
    lastname;

? ama state kem repeat thai 6e
SELECT DISTINCT
    state, city
FROM
    customers
WHERE
    state IS NOT NULL
ORDER BY 
    state, 
    city;

//DISTINCT and aggregate functions
SELECT 
    COUNT(DISTINCT state)
FROM
    customers
WHERE
    country = 'USA';
============================================================================
AND, IN, OR, BETWEEN
============================================================================
//
SELECT 
    customername, 
    country, 
    state
FROM
    customers
WHERE
    country = 'USA' AND state = 'CA';

//
SELECT    
    customername, 
    country
FROM    
    customers
WHERE country = 'USA' OR 
      country = 'France';

//
SELECT   
    customername, 
    country, 
    creditLimit
FROM   
    customers
WHERE(country = 'USA'
        OR country = 'France')
      AND creditlimit > 100000;

//
SELECT 
    officeCode, 
    city, 
    phone, 
    country
FROM
    offices
WHERE
    country IN ('USA' , 'France');

//IN with a subquery
SELECT    
    orderNumber, 
    customerNumber, 
    status, 
    shippedDate
FROM    
    orders
WHERE orderNumber IN
(
     SELECT 
         orderNumber
     FROM 
         orderDetails
     GROUP BY 
         orderNumber
     HAVING SUM(quantityOrdered * priceEach) > 60000
);

//
SELECT 
    productCode, 
    productName, 
    buyPrice
FROM
    products
WHERE
    buyPrice BETWEEN 90 AND 100;

//
SELECT 
    productCode, 
    productName, 
    buyPrice
FROM
    products
WHERE
    buyPrice NOT BETWEEN 20 AND 100;

//
SELECT 
   orderNumber,
   requiredDate,
   status
FROM 
   orders
WHERE 
   requireddate BETWEEN 
     CAST('2003-01-01' AS DATE) AND 
     CAST('2003-01-31' AS DATE);
============================================================================
LIKE
============================================================================
The percentage ( % ) wildcard matches any string of zero or more characters.
The underscore ( _ ) wildcard matches any single character.

//
SELECT 
    employeeNumber, 
    lastName, 
    firstName
FROM
    employees
WHERE
    firstName LIKE 'a%';

//
SELECT 
    employeeNumber, 
    lastName, 
    firstName
FROM
    employees
WHERE
    firstname LIKE 'T_m';

//
SELECT 
    productCode, 
    productName
FROM
    products
WHERE
    productCode LIKE '%\_20%';

    OR

SELECT 
    productCode, 
    productName
FROM
    products
WHERE
    productCode LIKE '%$_20%' ESCAPE '$';
============================================================================
LIMIT
============================================================================
SELECT 
    customerName, 
    creditLimit
FROM
    customers
ORDER BY 
    creditLimit DESC
    LIMIT 2,1;
============================================================================
INNER JOIN
============================================================================
//The INNER JOIN matches each row in one table with every row in other tables and allows you to query rows that contain columns from both tables.

SELECT 
    productCode, 
    productName, 
    textDescription
FROM
    products t1
INNER JOIN productlines t2 
    ON t1.productline = t2.productline;

//Because the joined columns of both tables have the same name  productline, you can use the USING
SELECT 
    productCode, 
    productName, 
    textDescription
FROM
    products
INNER JOIN productlines USING (productline);

//INNER JOIN with GROUP BY clause example
SELECT 
    t1.orderNumber,
    t1.status,
    SUM(quantityOrdered * priceEach) total
FROM
    orders t1
INNER JOIN orderdetails t2 
    ON t1.orderNumber = t2.orderNumber
GROUP BY orderNumber;

//INNER JOIN â€“ join three tables example
SELECT 
    orderNumber,
    orderDate,
    orderLineNumber,
    productName,
    quantityOrdered,
    priceEach
FROM
    orders
INNER JOIN
    orderdetails USING (orderNumber)
INNER JOIN
    products USING (productCode)
ORDER BY 
    orderNumber, 
    orderLineNumber;

//INNER JOIN using other operators
SELECT 
    orderNumber, 
    productName, 
    msrp, 
    priceEach
FROM
    products p
INNER JOIN orderdetails o 
   ON p.productcode = o.productcode
      AND p.msrp > o.priceEach
WHERE
    p.productcode = 'S10_1678';
============================================================================
LEFT JOIN
============================================================================
//
SELECT
    c.customerNumber,
    customerName,
    orderNumber,
    status
FROM
    customers c
LEFT JOIN orders o 
    ON c.customerNumber = o.customerNumber;

//
SELECT 
    o.orderNumber, 
    customerNumber, 
    productCode
FROM
    orders o
LEFT JOIN orderDetails 
    USING (orderNumber)
WHERE
    orderNumber = 10123;
============================================================================
RIGHT JOIN
============================================================================
//
SELECT 
    employeeNumber, 
    customerNumber
FROM
    customers
RIGHT JOIN employees 
    ON salesRepEmployeeNumber = employeeNumber
ORDER BY 
    employeeNumber;

